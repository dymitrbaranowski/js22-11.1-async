{"mappings":"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","sources":["node_modules/bootstrap.native/node_modules/.pnpm/@thednp+shorty@2.0.0/node_modules/@thednp/shorty/dist/shorty.mjs","node_modules/bootstrap.native/node_modules/.pnpm/@thednp+event-listener@2.0.4/node_modules/@thednp/event-listener/dist/event-listener.mjs","node_modules/bootstrap.native/src/components/base-component.ts","node_modules/bootstrap.native/src/strings/alertComponent.ts","node_modules/bootstrap.native/src/components/alert.ts","node_modules/bootstrap.native/src/strings/showClass.ts","node_modules/bootstrap.native/src/strings/fadeClass.ts","node_modules/bootstrap.native/src/components/button.ts","node_modules/bootstrap.native/src/strings/buttonComponent.ts","node_modules/bootstrap.native/src/strings/activeClass.ts","node_modules/bootstrap.native/src/strings/dataBsTarget.ts","node_modules/bootstrap.native/src/util/getTargetElement.ts","node_modules/bootstrap.native/src/strings/dataBsParent.ts","node_modules/bootstrap.native/src/strings/dataBsContainer.ts","node_modules/bootstrap.native/src/components/carousel.ts","node_modules/bootstrap.native/src/strings/carouselComponent.ts","node_modules/bootstrap.native/src/strings/carouselString.ts","node_modules/bootstrap.native/src/strings/collapsingClass.ts","node_modules/bootstrap.native/src/components/collapse.ts","node_modules/bootstrap.native/src/strings/collapseComponent.ts","node_modules/bootstrap.native/src/strings/collapseString.ts","node_modules/bootstrap.native/src/strings/dropdownClasses.ts","node_modules/bootstrap.native/src/util/isEmptyAnchor.ts","node_modules/bootstrap.native/src/components/dropdown.ts","node_modules/bootstrap.native/src/strings/dropdownComponent.ts","node_modules/bootstrap.native/src/strings/dataBsToggle.ts","node_modules/bootstrap.native/src/strings/dropdownMenuClass.ts","node_modules/bootstrap.native/src/strings/modalString.ts","node_modules/bootstrap.native/src/strings/stickyTopClass.ts","node_modules/bootstrap.native/src/strings/positionStickyClass.ts","node_modules/bootstrap.native/src/util/scrollbar.ts","node_modules/bootstrap.native/src/strings/fixedTopClass.ts","node_modules/bootstrap.native/src/strings/fixedBottomClass.ts","node_modules/bootstrap.native/src/util/popupContainer.ts","node_modules/bootstrap.native/src/util/backdrop.ts","node_modules/bootstrap.native/src/util/isVisible.ts","node_modules/bootstrap.native/src/components/modal.ts","node_modules/bootstrap.native/src/strings/modalComponent.ts","node_modules/bootstrap.native/src/strings/offcanvasComponent.ts","node_modules/bootstrap.native/src/components/offcanvas.ts","node_modules/bootstrap.native/src/strings/popoverString.ts","node_modules/bootstrap.native/src/util/getTipTemplate.ts","node_modules/bootstrap.native/src/strings/tooltipString.ts","node_modules/bootstrap.native/src/util/tipClassPositions.ts","node_modules/bootstrap.native/src/util/styleTip.ts","node_modules/bootstrap.native/src/strings/popoverComponent.ts","node_modules/bootstrap.native/src/util/tooltipDefaults.ts","node_modules/bootstrap.native/src/util/setHtml.ts","node_modules/bootstrap.native/src/components/tooltip.ts","node_modules/bootstrap.native/src/strings/tooltipComponent.ts","node_modules/bootstrap.native/src/strings/dataOriginalTitle.ts","node_modules/bootstrap.native/src/util/getElementContainer.ts","node_modules/bootstrap.native/src/util/createTip.ts","node_modules/bootstrap.native/src/components/popover.ts","node_modules/bootstrap.native/src/strings/scrollspyString.ts","node_modules/bootstrap.native/src/components/scrollspy.ts","node_modules/bootstrap.native/src/strings/scrollspyComponent.ts","node_modules/bootstrap.native/src/strings/tabString.ts","node_modules/bootstrap.native/src/components/tab.ts","node_modules/bootstrap.native/src/strings/tabComponent.ts","node_modules/bootstrap.native/src/strings/toastString.ts","node_modules/bootstrap.native/src/components/toast.ts","node_modules/bootstrap.native/src/strings/toastComponent.ts","node_modules/bootstrap.native/src/util/init.ts","src/js/04-subscription.js"],"sourcesContent":["const pe = \"aria-checked\", me = \"aria-description\", fe = \"aria-describedby\", ge = \"aria-expanded\", ve = \"aria-haspopup\", Ee = \"aria-hidden\", be = \"aria-label\", he = \"aria-labelledby\", ye = \"aria-modal\", we = \"aria-pressed\", Ae = \"aria-selected\", Se = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Me = \"aria-valuetext\", q = \"abort\", G = \"beforeunload\", J = \"blur\", K = \"change\", X = \"contextmenu\", P = \"DOMContentLoaded\", Y = \"DOMMouseScroll\", Z = \"error\", $ = \"focus\", _ = \"focusin\", tt = \"focusout\", et = \"gesturechange\", nt = \"gestureend\", ot = \"gesturestart\", st = \"keydown\", ct = \"keypress\", rt = \"keyup\", at = \"load\", it = \"click\", ut = \"dblclick\", lt = \"mousedown\", dt = \"mouseup\", pt = \"hover\", mt = \"mouseenter\", ft = \"mouseleave\", gt = \"mousein\", vt = \"mouseout\", Et = \"mouseover\", bt = \"mousemove\", ht = \"mousewheel\", yt = \"move\", wt = \"orientationchange\", At = \"pointercancel\", St = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Mt = \"pointerup\", Tt = \"readystatechange\", Dt = \"reset\", Ct = \"resize\", Ot = \"select\", Lt = \"selectend\", It = \"selectstart\", zt = \"scroll\", xt = \"submit\", Vt = \"touchstart\", Bt = \"touchmove\", Ht = \"touchcancel\", Pt = \"touchend\", Ft = \"unload\", Te = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: Y,\n  abort: q,\n  beforeunload: G,\n  blur: J,\n  change: K,\n  click: it,\n  contextmenu: X,\n  dblclick: ut,\n  error: Z,\n  focus: $,\n  focusin: _,\n  focusout: tt,\n  gesturechange: et,\n  gestureend: nt,\n  gesturestart: ot,\n  hover: pt,\n  keydown: st,\n  keypress: ct,\n  keyup: rt,\n  load: at,\n  mousedown: lt,\n  mousemove: bt,\n  mousein: gt,\n  mouseout: vt,\n  mouseenter: mt,\n  mouseleave: ft,\n  mouseover: Et,\n  mouseup: dt,\n  mousewheel: ht,\n  move: yt,\n  orientationchange: wt,\n  pointercancel: At,\n  pointerdown: St,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Mt,\n  readystatechange: Tt,\n  reset: Dt,\n  resize: Ct,\n  scroll: zt,\n  select: Ot,\n  selectend: Lt,\n  selectstart: It,\n  submit: xt,\n  touchcancel: Ht,\n  touchend: Pt,\n  touchmove: Bt,\n  touchstart: Vt,\n  unload: Ft\n}, De = \"drag\", Ce = \"dragstart\", Oe = \"dragenter\", Le = \"dragleave\", Ie = \"dragover\", ze = \"dragend\", xe = \"loadstart\", Ve = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Be = { down: \"mousedown\", up: \"mouseup\" }, He = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), Pe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Fe = { in: \"focusin\", out: \"focusout\" }, Ue = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, We = \"Alt\", Re = \"ArrowDown\", Qe = \"ArrowUp\", je = \"ArrowLeft\", qe = \"ArrowRight\", Ge = \"Backspace\", Je = \"CapsLock\", Ke = \"Control\", Xe = \"Delete\", Ye = \"Enter\", Ze = \"NumpadEnter\", $e = \"Escape\", _e = \"Insert\", tn = \"Meta\", en = \"Pause\", nn = \"ScrollLock\", on = \"Shift\", sn = \"Space\", cn = \"Tab\", Ut = \"animationDuration\", Wt = \"animationDelay\", F = \"animationName\", D = \"animationend\", Rt = \"transitionDuration\", Qt = \"transitionDelay\", C = \"transitionend\", U = \"transitionProperty\", rn = \"addEventListener\", an = \"removeEventListener\", un = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, ln = \"offsetHeight\", dn = \"offsetWidth\", pn = \"scrollHeight\", mn = \"scrollWidth\", fn = \"tabindex\", jt = navigator.userAgentData, A = jt, { userAgent: qt } = navigator, S = qt, z = /iPhone|iPad|iPod|Android/i;\nlet O = !1;\nA ? O = A.brands.some((t) => z.test(t.brand)) : O = z.test(S);\nconst gn = O, x = /(iPhone|iPod|iPad)/, vn = A ? A.brands.some((t) => x.test(t.brand)) : (\n  /* istanbul ignore next */\n  x.test(S)\n), En = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next */\n  !1\n), { head: N } = document, bn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Gt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Jt(t, e, s, o));\n  };\n  Gt(t, e, s, o);\n}, Xt = () => {\n}, hn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Kt(document, P, Xt, e);\n  } catch {\n  }\n  return t;\n})(), yn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), wn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, An = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), Sn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Yt = (t, e) => t.getAttribute(e), Nn = (t, e, n) => e.getAttributeNS(t, n), kn = (t, e) => t.hasAttribute(e), Mn = (t, e, n) => e.hasAttributeNS(t, n), Tn = (t, e, n) => t.setAttribute(e, n), Dn = (t, e, n, o) => e.setAttributeNS(t, n, o), Cn = (t, e) => t.removeAttribute(e), On = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, In = (t, ...e) => {\n  t.classList.remove(...e);\n}, zn = (t, e) => t.classList.contains(e), { body: xn } = document, { documentElement: Vn } = document, Bn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, Hn = (t, e) => L.get(t, e), k = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, M = (t, ...e) => Object.assign(t, ...e), Zt = (t) => {\n  if (!t)\n    return;\n  if (k(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = Zt(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, M(n, o);\n}, $t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (k(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = $t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, M(o, s);\n}, Q = (t, e) => t.dispatchEvent(e), Pn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, _t = (t) => {\n  const e = g(t, F), n = g(t, Wt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, te = (t) => {\n  const e = g(t, F), n = g(t, Ut), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Fn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = te(t), r = _t(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ee = (t) => {\n  const e = g(t, U), n = g(t, Qt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, ne = (t) => {\n  const e = g(t, U), n = g(t, Rt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ne(t), r = ee(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, Wn = (t) => Float32Array.from(Array.from(t)), Rn = (t) => Float64Array.from(Array.from(t)), Qn = (t, e) => t.focus(e), V = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), oe = (t) => t.toLowerCase(), jn = (t, e, n, o) => {\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return w(r).forEach(([c, m]) => {\n    const y = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(/[A-Z]/g, (j) => oe(j)) : c;\n    l[y] = V(m);\n  }), w(s).forEach(([c, m]) => {\n    s[c] = V(m);\n  }), w(e).forEach(([c, m]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? Yt(t, p) : m;\n  }), a;\n}, qn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), Jn = (t) => Object.values(t), Kn = (t) => Object.fromEntries(t), Xn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && M(n, e), n;\n}, Yn = { passive: !0 }, Zn = (t) => t.offsetHeight, $n = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && k(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, M(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, se = (t) => typeof t == \"number\" || !1, f = /* @__PURE__ */ new Map(), _n = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (f.has(t) || f.set(t, /* @__PURE__ */ new Map()), f.get(t).set(o, setTimeout(e, n))) : f.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = f.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : se(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = f.get(t);\n    e && e.length && I(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && f.delete(t)) : (clearTimeout(n), f.delete(t));\n  }\n}, to = (t) => t.toUpperCase(), h = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && u(t)) {\n    const { offsetWidth: m, offsetHeight: y } = t;\n    p = m > 0 ? Math.round(n) / m : (\n      /* istanbul ignore next */\n      1\n    ), c = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, eo = (t) => d(t).body, T = (t) => d(t).documentElement, no = (t) => d(t).head, oo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, ce = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, so = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\nce(t) && t.host || // ShadowRoot detected\nT(t), re = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, co = (t, e, n) => {\n  const o = u(e), s = h(t, o && re(e)), r = { x: 0, y: 0 };\n  if (o) {\n    const a = h(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet B = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? B : H;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), B += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, ro = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ie = (t) => Array.isArray(t) || !1, ao = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ue = (t) => u(t) && !!t.shadowRoot || !1, io = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, uo = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = T(t);\n  return e <= o && n >= 0;\n}, lo = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = T(t), { top: o, left: s, bottom: r, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, po = (t) => ie(t) && t.every(u) || !1, mo = (t) => typeof t == \"function\" || !1, fo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, go = (t) => u(t) && t.tagName === \"IMG\" || !1, vo = (t) => {\n  if (!k(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, Eo = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, bo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, ho = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, yo = (t) => T(t).dir === \"rtl\", wo = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, Ao = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, le = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nle(t.getRootNode().host, e) : null, So = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), de = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), No = (t) => [...de(\"*\", t)].filter(ue), ko = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), To = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), Do = (t, e) => t.matches(e), Co = \"2.0.0\";\nexport {\n  Bn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  Y as DOMMouseScrollEvent,\n  L as Data,\n  Wn as Float32ArrayFrom,\n  Rn as Float64ArrayFrom,\n  M as ObjectAssign,\n  w as ObjectEntries,\n  Kn as ObjectFromEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  Jn as ObjectValues,\n  _n as Timer,\n  q as abortEvent,\n  Ln as addClass,\n  rn as addEventListener,\n  Wt as animationDelay,\n  Ut as animationDuration,\n  D as animationEndEvent,\n  F as animationName,\n  pe as ariaChecked,\n  fe as ariaDescribedBy,\n  me as ariaDescription,\n  ge as ariaExpanded,\n  ve as ariaHasPopup,\n  Ee as ariaHidden,\n  be as ariaLabel,\n  he as ariaLabelledBy,\n  ye as ariaModal,\n  we as ariaPressed,\n  Ae as ariaSelected,\n  Ne as ariaValueMax,\n  Se as ariaValueMin,\n  ke as ariaValueNow,\n  Me as ariaValueText,\n  G as beforeunloadEvent,\n  un as bezierEasings,\n  J as blurEvent,\n  K as changeEvent,\n  le as closest,\n  X as contextmenuEvent,\n  Xn as createCustomEvent,\n  Zt as createElement,\n  $t as createElementNS,\n  Q as dispatchEvent,\n  Pn as distinct,\n  xn as documentBody,\n  Vn as documentElement,\n  N as documentHead,\n  De as dragEvent,\n  ze as dragendEvent,\n  Oe as dragenterEvent,\n  Le as dragleaveEvent,\n  Ie as dragoverEvent,\n  Ce as dragstartEvent,\n  Fn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  Z as errorEvent,\n  Qn as focus,\n  $ as focusEvent,\n  Fe as focusEvents,\n  _ as focusinEvent,\n  tt as focusoutEvent,\n  et as gesturechangeEvent,\n  nt as gestureendEvent,\n  ot as gesturestartEvent,\n  Yt as getAttribute,\n  Nn as getAttributeNS,\n  h as getBoundingClientRect,\n  No as getCustomElements,\n  d as getDocument,\n  eo as getDocumentBody,\n  T as getDocumentElement,\n  no as getDocumentHead,\n  _t as getElementAnimationDelay,\n  te as getElementAnimationDuration,\n  ko as getElementById,\n  g as getElementStyle,\n  ee as getElementTransitionDelay,\n  ne as getElementTransitionDuration,\n  To as getElementsByClassName,\n  de as getElementsByTagName,\n  Hn as getInstance,\n  oo as getNodeScroll,\n  so as getParentNode,\n  co as getRectRelativeToOffsetParent,\n  ae as getUID,\n  ro as getWindow,\n  kn as hasAttribute,\n  Mn as hasAttributeNS,\n  zn as hasClass,\n  vn as isApple,\n  ie as isArray,\n  ao as isCanvas,\n  ue as isCustomElement,\n  R as isDocument,\n  io as isElement,\n  uo as isElementInScrollRange,\n  lo as isElementInViewport,\n  po as isElementsArray,\n  En as isFirefox,\n  mo as isFunction,\n  fo as isHTMLCollection,\n  u as isHTMLElement,\n  go as isHTMLImageElement,\n  vo as isJSON,\n  I as isMap,\n  bo as isMedia,\n  gn as isMobile,\n  i as isNode,\n  ho as isNodeList,\n  se as isNumber,\n  v as isObject,\n  yo as isRTL,\n  wo as isSVGElement,\n  re as isScaledElement,\n  ce as isShadowRoot,\n  k as isString,\n  Ao as isTableElement,\n  Eo as isWeakMap,\n  W as isWindow,\n  We as keyAlt,\n  Re as keyArrowDown,\n  je as keyArrowLeft,\n  qe as keyArrowRight,\n  Qe as keyArrowUp,\n  Ge as keyBackspace,\n  Je as keyCapsLock,\n  Ke as keyControl,\n  Xe as keyDelete,\n  Ye as keyEnter,\n  $e as keyEscape,\n  _e as keyInsert,\n  tn as keyMeta,\n  Ze as keyNumpadEnter,\n  en as keyPause,\n  nn as keyScrollLock,\n  on as keyShift,\n  sn as keySpace,\n  cn as keyTab,\n  Ue as keyboardEventKeys,\n  st as keydownEvent,\n  ct as keypressEvent,\n  rt as keyupEvent,\n  at as loadEvent,\n  xe as loadstartEvent,\n  Do as matches,\n  Be as mouseClickEvents,\n  He as mouseHoverEvents,\n  Ve as mouseSwipeEvents,\n  it as mouseclickEvent,\n  ut as mousedblclickEvent,\n  lt as mousedownEvent,\n  mt as mouseenterEvent,\n  pt as mousehoverEvent,\n  gt as mouseinEvent,\n  ft as mouseleaveEvent,\n  bt as mousemoveEvent,\n  vt as mouseoutEvent,\n  Et as mouseoverEvent,\n  dt as mouseupEvent,\n  ht as mousewheelEvent,\n  yt as moveEvent,\n  Te as nativeEvents,\n  Xt as noop,\n  jn as normalizeOptions,\n  V as normalizeValue,\n  Jt as off,\n  ln as offsetHeight,\n  dn as offsetWidth,\n  Gt as on,\n  Kt as one,\n  wt as orientationchangeEvent,\n  Yn as passiveHandler,\n  At as pointercancelEvent,\n  St as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Mt as pointerupEvent,\n  So as querySelector,\n  Mo as querySelectorAll,\n  Tt as readystatechangeEvent,\n  Zn as reflow,\n  Cn as removeAttribute,\n  On as removeAttributeNS,\n  In as removeClass,\n  an as removeEventListener,\n  Dt as resetEvent,\n  Ct as resizeEvent,\n  zt as scrollEvent,\n  pn as scrollHeight,\n  mn as scrollWidth,\n  Ot as selectEvent,\n  Lt as selectendEvent,\n  It as selectstartEvent,\n  Tn as setAttribute,\n  Dn as setAttributeNS,\n  $n as setElementStyle,\n  xt as submitEvent,\n  bn as support3DTransform,\n  An as supportAnimation,\n  hn as supportPassive,\n  wn as supportTouch,\n  yn as supportTransform,\n  Sn as supportTransition,\n  fn as tabindex,\n  oe as toLowerCase,\n  to as toUpperCase,\n  Pe as touchEvents,\n  Ht as touchcancelEvent,\n  Pt as touchendEvent,\n  Bt as touchmoveEvent,\n  Vt as touchstartEvent,\n  Qt as transitionDelay,\n  Rt as transitionDuration,\n  C as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  Co as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n), a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  o && o.has(i) && o.delete(i), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[c], (!o || !o.size) && t.removeEventListener(\n    c,\n    f,\n    d\n  );\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else */\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    /* istanbul ignore else */\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n  getAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n  matches,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  /* istanbul ignore else */\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (self.cycle && !getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    /* istanbul ignore else */\n    if (orientation === 'next') {\n      self.next();\n    } else if (orientation === 'prev') {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    /* istanbul ignore else */\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    if (![...controls, ...indicators].every(el => el === target || el.contains(target as Node))) {\n      startX = e.pageX;\n\n      /* istanbul ignore else */\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore else */\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      /* istanbul ignore else */\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler, passiveHandler);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find(s => matches(s, `.${carouselItem}-next,.${carouselItem}-next`));\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n        ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n      // set first slide active if none\n      /* istanbul ignore next - impossible to test with cypress */\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (!this.isAnimating && activeItem !== next && !Timer.get(element, dataBsSlide)) {\n      // determine transition direction\n      /* istanbul ignore else */\n      if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n        this.direction = RTL ? 'right' : 'left'; // next\n      } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n        this.direction = RTL ? 'left' : 'right'; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === 'left' ? 'next' : 'prev';\n      const directionClass = direction === 'left' ? 'start' : 'end';\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () => this.slides && this.slides.length && carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              /* istanbul ignore else */\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(element, pointerdownEvent, carouselPointerDownHandler, passiveHandler);\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    /* istanbul ignore else */\n    if (controls.length) {\n      controls.forEach(arrow => {\n        /* istanbul ignore else */\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    /* istanbul ignore else */\n    if (indicators.length) {\n      indicators.forEach(indicator => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler);\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next - impossible to test with cypress\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: '0px' });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      /* istanbul ignore else */\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler));\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","import { hasAttribute, closest, getAttribute } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (getAttribute(element, 'href') as string).slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, 'href') &&\n      (getAttribute(parentAnchor, 'href') as string).slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n  isHTMLElement,\n  mousedownEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore else: this test requires a navbar */\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      /* istanbul ignore next: fallback position */ dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n      if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n      if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      /* istanbul ignore else */\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore else */\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    /* istanbul ignore else */\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      /* istanbul ignore else */\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  /* istanbul ignore else */\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      /* istanbul ignore else */\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      /* istanbul ignore else */\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n  MouseEvent,\n  KeyboardEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<HTMLElement>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options } = self;\n    /* istanbul ignore else */\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget ? getModalInstance(currentTarget) : null;\n\n  // this timer is needed\n  /* istanbul ignore else: must have a filter */\n  if (self && currentTarget && !Timer.get(currentTarget)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(currentTarget)?.getSelection()?.toString().length;\n    const targetInsideDialog = modalDialog.contains(target);\n    const dismiss = target && closest(target, modalDismissSelector);\n\n    /* istanbul ignore else */\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        currentTarget,\n        () => {\n          addClass(currentTarget, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    /* istanbul ignore else */\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n        btn => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === 'static';\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n\n      // attach event listeners\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getModalInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          /* istanbul ignore else */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, 'true');\n        removeAttribute(element, ariaModal);\n\n        /* istanbul ignore else */\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler));\n    }\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, modalDialog } = clone;\n    // const callback = () => setTimeout(() => super.dispose(), 17);\n    const callback = () => super.dispose();\n    this._toggleEventListeners();\n\n    this.hide();\n\n    /* istanbul ignore else */\n    if (hasClass(element, 'fade')) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    /* istanbul ignore else: a filter is required here */\n    if (!overlay.contains(target as HTMLElement) || backdrop !== 'static') {\n      /* istanbul ignore else */\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n        self.hide();\n      }\n\n      /* istanbul ignore next */\n      if (trigger && trigger.tagName === 'A') e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getOffcanvasInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          /* istanbul ignore next - this test was done on Modal */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n    // let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler));\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, options } = clone;\n    const delay = options.backdrop ? getElementTransitionDuration(overlay) : /* istanbul ignore next */ 0;\n    const callback = () => setTimeout(() => super.dispose(), delay + 17);\n    this._toggleEventListeners();\n\n    this.hide();\n    if (hasClass(element, showClass)) {\n      emulateTransitionEnd(element, callback);\n      /* istanbul ignore next */\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  /* istanbul ignore else */\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n    const parentPosition = getElementStyle(container as HTMLElement, 'position');\n    const fixedParent = parentPosition === 'fixed';\n    const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = '';\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = '';\n    let arrowTop: number | string = '';\n    let arrowLeft: number | string = '';\n    let arrowRight: number | string = '';\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = ['left', 'right'];\n    const verticals = ['top', 'bottom'];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n    // recompute placement\n    placement = placement === 'top' && topExceed ? 'bottom' : placement;\n    placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n    placement = placement === 'left' && leftExceed ? 'right' : placement;\n    placement = placement === 'right' && rightExceed ? /* istanbul ignore next */ 'left' : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n    }\n\n    // compute tooltip / popover coordinates\n    /* istanbul ignore else */\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === 'left') {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = '';\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = '';\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n      left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== '' ? `${rightPosition}px` : '',\n    });\n\n    // update arrow placement\n    /* istanbul ignore else */\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== '') {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== '') {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== '') {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: HTMLElement, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore else */\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n      // set title attributes and add event listeners\n      /* istanbul ignore else */\n      if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = ['sticky', 'fixed'].some(\n        position => getElementStyle(this.container as HTMLElement, 'position') === position,\n      )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // attach events\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            /* istanbul ignore else */\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            else tooltipShownAction(this);\n          }\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasTip(this) && animation) {\n        this.hide();\n        emulateTransitionEnd(tooltip, () => this._toggleEventListeners());\n      } else {\n        this._toggleEventListeners();\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore else */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n    /* istanbul ignore else */\n    if (!trigger.includes('manual')) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(' ');\n\n      triggerOptions.forEach(tr => {\n        /* istanbul ignore else */\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          /* istanbul ignore else */\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(getDocument(element), touchstartEvent, this.handleTouch, passiveHandler);\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          /* istanbul ignore else */\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          /* istanbul ignore else */\n          if (isApple) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        /* istanbul ignore else */\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () => setTimeout(() => disposeTooltipComplete(clone, () => super.dispose()), 17);\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore else */\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, 'id', id);\n    setAttribute(tooltip, 'role', tooltipString);\n\n    const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n    const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement('div') as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement('div') as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        /* istanbul ignore else */\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    /* istanbul ignore else */\n    if (!isTooltip) {\n      /* istanbul ignore else */\n      if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n      /* istanbul ignore else */\n      if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n      // set btn\n      self.btn = querySelector('.btn-close', tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, 'position-fixed');\n    addClass(arrow, 'position-absolute');\n\n    // set popover animation and placement\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    /* istanbul ignore else */\n    if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n    /* istanbul ignore else */\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // add event handlers\n      this._toggleEventListeners(true);\n\n      this.refresh();\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore else */\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        /* istanbul ignore else */\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /**\n   * Toggles on/off the component event listener.\n   *\n   * @param add when `true`, listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.scrollTarget as EventTarget, scrollEvent, this.refresh, passiveHandler);\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  if (!showTabEvent.defaultPrevented) {\n    if (nextContent) addClass(nextContent, activeClass);\n    if (content) removeClass(content, activeClass);\n\n    /* istanbul ignore else */\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    /* istanbul ignore else */\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        /* istanbul ignore else */\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      /* istanbul ignore else */\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        /* istanbul ignore else */\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          /* istanbul ignore else */\n          if (nav) {\n            const toggleTab = () => {\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  self._toggleEventListeners();\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore else: a solid filter is required */\n  if (self && element !== relatedTarget && !element.contains(relatedTarget as Node)) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    /* istanbul ignore else */\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    /* istanbul ignore else */\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n        action(element, e, interactiveToastHandler),\n      );\n    }\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n","import '../sass/_common.scss';\nimport BSN from 'bootstrap.native';\nvar BSN = require('bootstrap.native');\n\nconst refs = {\n  modal: document.querySelector('#subscription-modal'),\n  subscribeBtn: document.querySelector('button[data-subscribe]'),\n};\nconst PROMPT_DELAY = 3000;\nconst MAX_PROMPT_ATTEMPTS = 3;\nlet promptCounter = 0;\nlet hasSubscribed = false;\nconst modal = new BSN.Modal('#subscription-modal');\n\nopenModal();\n\nrefs.modal.addEventListener('hide.bs.modal', openModal);\nrefs.subscribeBtn.addEventListener('click', onSubscribeBtnClick);\n\nfunction openModal() {\n  if (promptCounter === MAX_PROMPT_ATTEMPTS || hasSubscribed) {\n    console.log('Максимальное кол-во надоеданий или подписался');\n    return;\n  }\n\n  setTimeout(() => {\n    console.log('Открываем надоедалку');\n    modal.show();\n    promptCounter += 1;\n  }, PROMPT_DELAY);\n}\n\nfunction onSubscribeBtnClick() {\n  hasSubscribed = true;\n  modal.hide();\n}\n"],"names":["_","tt","it","lt","mt","ft","Ct","zt","Re","Qe","A","navigator","userAgentData","userAgent","qt","S","z","brands","some","t","test","brand","x","vn","includes","head","N","document","style","Xt","e","Object","defineProperty","get","n","o","s","r","target","currentTarget","apply","removeEventListener","Jt","addEventListener","Gt","Kt","Yt","getAttribute","kn","hasAttribute","Tn","setAttribute","Cn","removeAttribute","Ln","classList","add","In","remove","zn","contains","v","i","nodeType","u","E","Map","L","data","set","has","getAllFor","delete","size","Hn","k","W","constructor","name","R","d","ownerDocument","window","M","assign","Zt","createElement","tagName","Q","dispatchEvent","g","getComputedStyle","replace","toLowerCase","getPropertyValue","ne","parseFloat","Number","isNaN","Un","Event","ee","a","l","setTimeout","Qn","focus","V","w","entries","oe","Gn","keys","Xn","CustomEvent","cancelable","bubbles","Yn","passive","Zn","offsetHeight","$n","forEach","setProperty","I","f","_n","length","se","clearTimeout","h","width","height","top","right","bottom","left","getBoundingClientRect","p","c","offsetWidth","m","y","Math","round","eo","body","T","documentElement","ce","so","nodeName","assignedSlot","parentNode","host","B","H","b","ae","id","ro","defaultView","uo","clientHeight","yo","dir","Ao","le","closest","getRootNode","So","querySelector","de","getElementsByTagName","Mo","querySelectorAll","To","getElementsByClassName","Do","matches","type","once","BaseComponent","version","defaults","dispose","Data","this","element","ObjectKeys","prop","config","__publicField","isString","Error","prevInstance","_toggleEventListeners","options","dataset","j","normalizeOptions","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","Alert","super","hasClass","defaultPrevented","removeClass","emulateTransitionEnd","action","addListener","removeListener","dismiss","close","mouseclickEvent","getInstance","Button","preventDefault","isActive","addClass","toggle","String","getTargetElement","targetAttr","doc","getDocument","map","att","attValue","filter","carouselDefaults","pause","keyboard","touch","interval","getCarouselInstance","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","isAnimating","activeItem","getActiveIndex","orientation","directionClass","Timer","cycle","hidden","isPaused","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","to","carouselControlsHandler","next","prev","carouselKeyHandler","code","isElementInScrollRange","RTL","isRTL","carouselDragHandler","isTouch","indicator","controls","stopImmediatePropagation","stopPropagation","carouselPointerDownHandler","indicators","every","el","pageX","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","_a","find","getSelection","toString","abs","activateCarouselIndicator","passiveHandler","isHTMLElement","indexOf","Carousel","idx","eventProperties","relatedTarget","from","ObjectAssign","getElementTransitionDuration","reflow","clone","mouseenterEvent","mouseleaveEvent","arrow","activeIndex","transitionItem","ar","collapseDefaults","parent","getCollapseInstance","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","collapseContent","triggers","noop","setElementStyle","scrollHeight","btn","collapseClickHandler","trigger","Collapse","hide","show","activeCollapse","activeCollapseInstance","expandCollapse","dropdownMenuClasses","isEmptyAnchor","parentAnchor","slice","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","offset","display","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","getElementStyle","menuEnd","positionClass","dropdownMargin","dropdown","dropup","dropstart","dropend","dropdownPosition","menuStart","menuWidth","menuHeight","clientWidth","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","margin","join","toggleDropdownDismiss","open","dropdownDismissHandler","dropdownPreventScroll","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","getCurrentOpenDropdown","currentParent","children","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","menuItems","firstElementChild","getMenuItems","Dropdown","currentElement","currentInstance","stickyTopClass","positionStickyClass","getFixedItems","measureScrollbar","innerWidth","setScrollbar","overflow","bd","getDocumentBody","bodyPad","parseInt","sbWidth","fixedItems","paddingRight","fixed","itemPadValue","itemMValue","marginRight","popupContainer","className","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","append","removePopup","hasPopup","modalBackdropClass","offcanvasBackdropClass","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","resetScrollbar","isVisible","offsetParent","modalDefaults","backdrop","getModalInstance","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","modalHeight","modalScrollHeight","modalOverflow","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","afterModalHide","focusElement","afterModalShow","beforeModalShow","beforeModalHide","modalClickHandler","_b","isStatic","modalDialog","selectedText","targetInsideDialog","staticTransitionEnd","duration","Modal","overlayDelay","currentOpen","that","callback","offcanvasDefaults","scroll","getOffcanvasInstance","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","setOffCanvasScrollbar","visibility","showOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","hideOffcanvasComplete","visibleTrigger","Offcanvas","blur","beforeOffcanvasHide","delay","getTipTemplate","tipType","isTooltip","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","tooltipDefaults","template","title","customClass","sanitizeFn","animation","content","dismissible","btnClose","setHtml","dirty","trim","isFunction","tempDocument","DOMParser","parseFromString","childNodes","isNodeList","Array","isArray","getTooltipInstance","hasTip","toggleTooltipAction","handleTouch","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","removeTooltip","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","win","scrollTarget","handleHide","toggleTooltipTitle","titleAtt","Tooltip","outTimer","tipContainer","showTooltipEvent","hideTooltipEvent","enable","enabled","disable","toggleEnabled","disposeTooltipComplete","split","tr","handleShow","focusinEvent","focusoutEvent","isApple","handleFocus","tipString","tipComponent","elem","getUID","titleAttr","majorBlockTags","containers","getParentNode","isShadowRoot","isTableElement","push","getElementContainer","position","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","firstChild","cloneNode","bodyClass","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","createTip","popoverDefaults","Popover","scrollspyDefaults","activateScrollSpy","getScrollHeight","getOffsetHeight","isWindow","innerHeight","clear","item","activate","parents","parentItem","menuItem","parentLink","previousElementSibling","ScrollSpy","itemsLength","isWin","links","scrollHEIGHT","scrollTop","scrollY","href","targetItem","rect","items","offsets","maxScroll","link","charAt","offsetTop","updateSpyTargets","newActiveItem","refresh","getTabInstance","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","tabClickHandler","Tab","activeDropdown","toggleTab","firstTab","firstTabContent","toastDefaults","autohide","getToastInstance","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","toastClickHandler","interactiveToastHandler","Toast","isShown","showToast","hideToast","componentsList","prototype","initCallback","context","lookUp","elemCollection","cs","init","selector","collection","initComponentDataAPI","$844906d4d1741551$var$refs","modal","subscribeBtn","$844906d4d1741551$var$promptCounter","$844906d4d1741551$var$hasSubscribed","$844906d4d1741551$var$modal","$c4e224052b74e2a9$export$2b77a92f1a5ad772","$844906d4d1741551$var$openModal","console","log"],"version":3,"file":"04-subscription.f61c9a08.js.map"}